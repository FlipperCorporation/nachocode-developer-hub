name: 'Slack Notification'
description: 'Send notification to Slack'
inputs:
  project:
    description: 'Deployment project'
    required: true
  status:
    description: 'Deployment status (Success or Failure)'
    required: true
  environment:
    description: 'Deployment environment (Production or Develop)'
    required: true
  slack_webhook_url:
    description: 'Slack Webhook URL'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Notify Slack
      shell: bash
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook_url }}
      run: |
        if [ "${{ inputs.environment }}" == "Production" ]; then
          ENV_NAME="Production ‼"
          ENV_NAME_KOR="운영"
        elif [ "${{ inputs.environment }}" == "Develop" ]; then
          ENV_NAME="Develop"
          ENV_NAME_KOR="개발"
        else
          ENV_NAME_KOR=""
        fi
        if [ "${{ inputs.status }}" == "Success" ]; then
          ICON=":rocket:"
          STATUS_MESSAGE="*$ENV_NAME_KOR 서버 배포 성공*"
        else
          ICON=":warning:"
          STATUS_MESSAGE="*$ENV_NAME_KOR 서버 배포 실패*"
        fi

        COMMIT_TITLE=$(echo "${{ github.event.head_commit.message }}" | head -n 1)

        COMMIT_URL="https://github.com/${{ github.repository }}/commit/${{ github.sha }}"

        ACTIONS_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

        MESSAGES=(
          "$ICON  $STATUS_MESSAGE  $ICON\n"
          ">*프로젝트*: ${{ inputs.project }}\n"
          ">*운영환경*: $ENV_NAME\n"
          ">*변경사항*: <$COMMIT_URL|$COMMIT_TITLE>\n"
          ">*배포자*: ${{ github.actor }} ${{ github.event.pusher.email }}\n"
          ">*시간*: $(date -u -d '+9 hours' +'%Y-%m-%d %H:%M')\n"
          ">*참조*: <$ACTIONS_URL|GitHub Actions>"
        )

        MESSAGE=""
        for msg in "${MESSAGES[@]}"; do
          MESSAGE+="$msg"
        done

        echo -e "$MESSAGE"

        curl -X POST -H 'Content-type: application/json' --data "{\"text\": \"$MESSAGE\"}" ${{ inputs.slack_webhook_url }}
